// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolJournalDesktop.Models;

#nullable disable

namespace SchoolJournalDesktop.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230419062049_AddParentPhoneColumn")]
    partial class AddParentPhoneColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolJournalDesktop.Models.AcademicYear", b =>
                {
                    b.Property<int>("IdAcademicYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAcademicYear"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAcademicYear");

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.DateJournalRecord", b =>
                {
                    b.Property<int>("IdDateJournalRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDateJournalRecord"));

                    b.Property<DateTime>("DateRecord")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRegisterJournal")
                        .HasColumnType("int");

                    b.HasKey("IdDateJournalRecord");

                    b.HasIndex("IdRegisterJournal");

                    b.ToTable("DateJournalRecord");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Grade", b =>
                {
                    b.Property<int>("IdGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrade"));

                    b.Property<int>("GradeNum")
                        .HasColumnType("int");

                    b.Property<int>("IdDateJournalRecord")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("IdGrade");

                    b.HasIndex("IdDateJournalRecord");

                    b.HasIndex("IdStudent");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.RegisterJournal", b =>
                {
                    b.Property<int>("IdRegisterJournal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegisterJournal"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAcademicYear")
                        .HasColumnType("int");

                    b.Property<int>("IdScheduleEducationProcess")
                        .HasColumnType("int");

                    b.Property<int>("IdStudingClass")
                        .HasColumnType("int");

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacherCard")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("IdRegisterJournal");

                    b.HasIndex("IdAcademicYear");

                    b.HasIndex("IdScheduleEducationProcess");

                    b.HasIndex("IdStudingClass");

                    b.HasIndex("IdSubject");

                    b.HasIndex("IdTeacherCard");

                    b.ToTable("RegisterJournals");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.ScheduleEducationProcess", b =>
                {
                    b.Property<int>("IdScheduleEducationProcess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdScheduleEducationProcess"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSchool")
                        .HasColumnType("int");

                    b.HasKey("IdScheduleEducationProcess");

                    b.HasIndex("IdSchool");

                    b.ToTable("ScheduleEducationProcesses");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.School", b =>
                {
                    b.Property<int>("IdSchool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSchool"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSchool");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStudent");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.StudingClass", b =>
                {
                    b.Property<int>("IdStudingClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudingClass"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParallelIndex")
                        .HasColumnType("int");

                    b.HasKey("IdStudingClass");

                    b.ToTable("StudingClasses");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Subject", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubject"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubject");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.TeacherCard", b =>
                {
                    b.Property<int>("IdTeacherCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacherCard"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTeacherCard");

                    b.ToTable("TeacherCards");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.TeacherCategory", b =>
                {
                    b.Property<int>("IdTeacherCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacherCategory"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTeacherCategory");

                    b.ToTable("TeacherCategories");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.TeacherPosition", b =>
                {
                    b.Property<int>("IdTeacherPosition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacherPosition"));

                    b.Property<DateTime>("BeginWorking")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTeacherCard")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacherCategory")
                        .HasColumnType("int");

                    b.Property<double>("OccupiedRate")
                        .HasColumnType("float");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTeacherPosition");

                    b.HasIndex("IdTeacherCard");

                    b.HasIndex("IdTeacherCategory");

                    b.ToTable("TeacherPositions");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.DateJournalRecord", b =>
                {
                    b.HasOne("SchoolJournalDesktop.Models.RegisterJournal", "RegisterJournal")
                        .WithMany("DateJournalRecords")
                        .HasForeignKey("IdRegisterJournal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegisterJournal");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Grade", b =>
                {
                    b.HasOne("SchoolJournalDesktop.Models.DateJournalRecord", "DateJournalRecord")
                        .WithMany("Grades")
                        .HasForeignKey("IdDateJournalRecord")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolJournalDesktop.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DateJournalRecord");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.RegisterJournal", b =>
                {
                    b.HasOne("SchoolJournalDesktop.Models.AcademicYear", "AcademicYear")
                        .WithMany("RegisterJournals")
                        .HasForeignKey("IdAcademicYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolJournalDesktop.Models.ScheduleEducationProcess", "ScheduleEducationProcess")
                        .WithMany("RegisterJournals")
                        .HasForeignKey("IdScheduleEducationProcess")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolJournalDesktop.Models.StudingClass", "StudingClass")
                        .WithMany("RegisterJournals")
                        .HasForeignKey("IdStudingClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolJournalDesktop.Models.Subject", "Subject")
                        .WithMany("RegisterJournals")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolJournalDesktop.Models.TeacherCard", "TeacherCard")
                        .WithMany("RegisterJournals")
                        .HasForeignKey("IdTeacherCard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("ScheduleEducationProcess");

                    b.Navigation("StudingClass");

                    b.Navigation("Subject");

                    b.Navigation("TeacherCard");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.ScheduleEducationProcess", b =>
                {
                    b.HasOne("SchoolJournalDesktop.Models.School", "School")
                        .WithMany("ScheduleEducationProcesses")
                        .HasForeignKey("IdSchool")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.TeacherPosition", b =>
                {
                    b.HasOne("SchoolJournalDesktop.Models.TeacherCard", "TeacherCard")
                        .WithMany("TeacherPositions")
                        .HasForeignKey("IdTeacherCard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolJournalDesktop.Models.TeacherCategory", "TeacherCategory")
                        .WithMany("TeacherPositions")
                        .HasForeignKey("IdTeacherCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherCard");

                    b.Navigation("TeacherCategory");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.User", b =>
                {
                    b.HasOne("SchoolJournalDesktop.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.AcademicYear", b =>
                {
                    b.Navigation("RegisterJournals");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.DateJournalRecord", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.RegisterJournal", b =>
                {
                    b.Navigation("DateJournalRecords");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.ScheduleEducationProcess", b =>
                {
                    b.Navigation("RegisterJournals");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.School", b =>
                {
                    b.Navigation("ScheduleEducationProcesses");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.StudingClass", b =>
                {
                    b.Navigation("RegisterJournals");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.Subject", b =>
                {
                    b.Navigation("RegisterJournals");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.TeacherCard", b =>
                {
                    b.Navigation("RegisterJournals");

                    b.Navigation("TeacherPositions");
                });

            modelBuilder.Entity("SchoolJournalDesktop.Models.TeacherCategory", b =>
                {
                    b.Navigation("TeacherPositions");
                });
#pragma warning restore 612, 618
        }
    }
}
